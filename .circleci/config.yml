version: 2.1

executors:
  nextjs-executor:
    docker:
      - image: circleci/node:16

#defaults: &DEFAULT
#  working_directory: ~/app

#commands:
#  build-

jobs:
  test:
#    <<: *DEFAULT
    executor: nextjs-executor
    steps:
      - checkout
      - run:
          name: Install jest-junit for coverage reporting
          command: npm install jest-junit
      - run:
          name: Run CI Tests
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
  build:
#    <<: *DEFAULT
    executor: nextjs-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build application Docker image
          command: |
            docker build -t lapinlabs/smartmoney3k .
      # Note: we don't push here, we wait for tests to pass and push in the deploy job


#  deploy:
#    <<: *DEFAULT
#    steps:
#      - checkout
#      - setup_remote_docker
#      - restore_cache:
#          keys:
#            - v1-{{ .Branch }}
#          paths:
#            - /caches/app.tar
#      - run:
#          name: Load Docker image layer cache
#          command: |
#            set +o pipefail
#            docker load -i /caches/app.tar | true
#      - run:
#          name: Push application Docker image
#          command: |
#            docker login -u $DOCKER_USER -p $DOCKER_PASS
#            docker tag lapinlabs/smartmoney3k lapinlabs/smartmoney3k:${CIRCLE_BRANCH//\//-}-${CIRCLE_BUILD_NUM}
#            docker push lapinlabs/smartmoney3k:${CIRCLE_BRANCH//\//-}-${CIRCLE_BUILD_NUM}
#            docker push lapinlabs/smartmoney3k:latest
#      - run:
#          name: Remotely deploy to droplet
#          command: |
#            apk add --update curl curl-dev jq
#            export IP=`curl -s -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DO_TOKEN" "https://api.digitalocean.com/v2/droplets/" | jq ".droplets[] | select(.name == \"$DEPLOY_NODE\") | .networks.v4[0].ip_address"`
#            export IP=`echo $IP | sed -e 's/^"//' -e 's/"$//'`
#            echo "Deploying to $DEPLOY_NODE [$IP]"
#            ssh -o StrictHostKeyChecking=no root@${IP} "service container-smartmoney3k redeploy"

workflows:
  build-test-and-deploy:
    jobs:
      - test:
          context: deployment
#      - build:
#          context: deployment
#      - deploy:
#          context: deployment
#          requires:
#            - build
#            - test
#          filters:
#            branches:
#              only:
#                - master
